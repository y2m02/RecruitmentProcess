// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecruitmentManagementApp.Models.Entities;

namespace RecruitmentManagementApp.Migrations
{
    [DbContext(typeof(RecruitmentManagementContext))]
    partial class RecruitmentManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RecruitmentManagementApp.Models.Entities.Candidate", b =>
                {
                    b.Property<int>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Curriculum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("GitHub")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("CandidateId");

                    b.HasIndex("StatusId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("RecruitmentManagementApp.Models.Entities.Recruitment", b =>
                {
                    b.Property<int>("RecruitmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("RecruitmentId");

                    b.HasIndex("CandidateId")
                        .IsUnique();

                    b.HasIndex("StatusId");

                    b.ToTable("Recruitments");
                });

            modelBuilder.Entity("RecruitmentManagementApp.Models.Entities.RecruitmentUpdateHistory", b =>
                {
                    b.Property<int>("RecruitmentUpdateHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CandidateId")
                        .HasColumnType("int");

                    b.Property<string>("ChangeReason")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("RecruitmentId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("RecruitmentUpdateHistoryId");

                    b.HasIndex("CandidateId");

                    b.HasIndex("RecruitmentId");

                    b.HasIndex("StatusId");

                    b.ToTable("RecruitmentUpdateHistories");
                });

            modelBuilder.Entity("RecruitmentManagementApp.Models.Entities.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StatusId");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("RecruitmentManagementApp.Models.Entities.Candidate", b =>
                {
                    b.HasOne("RecruitmentManagementApp.Models.Entities.Status", "Status")
                        .WithMany("Candidates")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("RecruitmentManagementApp.Models.Entities.Recruitment", b =>
                {
                    b.HasOne("RecruitmentManagementApp.Models.Entities.Candidate", "Candidate")
                        .WithOne("Recruitment")
                        .HasForeignKey("RecruitmentManagementApp.Models.Entities.Recruitment", "CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecruitmentManagementApp.Models.Entities.Status", "Status")
                        .WithMany("Recruitments")
                        .HasForeignKey("StatusId");

                    b.Navigation("Candidate");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("RecruitmentManagementApp.Models.Entities.RecruitmentUpdateHistory", b =>
                {
                    b.HasOne("RecruitmentManagementApp.Models.Entities.Candidate", "Candidate")
                        .WithMany("RecruitmentUpdateHistories")
                        .HasForeignKey("CandidateId");

                    b.HasOne("RecruitmentManagementApp.Models.Entities.Recruitment", "Recruitment")
                        .WithMany()
                        .HasForeignKey("RecruitmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecruitmentManagementApp.Models.Entities.Status", "Status")
                        .WithMany("RecruitmentUpdateHistories")
                        .HasForeignKey("StatusId");

                    b.Navigation("Candidate");

                    b.Navigation("Recruitment");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("RecruitmentManagementApp.Models.Entities.Candidate", b =>
                {
                    b.Navigation("Recruitment");

                    b.Navigation("RecruitmentUpdateHistories");
                });

            modelBuilder.Entity("RecruitmentManagementApp.Models.Entities.Status", b =>
                {
                    b.Navigation("Candidates");

                    b.Navigation("Recruitments");

                    b.Navigation("RecruitmentUpdateHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
